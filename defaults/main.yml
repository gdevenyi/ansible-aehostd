---
# defaults file for roles/ae-dir-hostd

# map real LSB id to another LSB id to be used during plays
aehostd_lsb_id_map:
  openSUSE: "SUSE"

# LSB id to be used during plays
aehostd_lsb_id: "{{ aehostd_lsb_id_map.get(ansible_lsb.id,ansible_lsb.id) }}"

# LDAPS URIs of primary AE-DIR servers (e.g. in same data center)
aehostd_uri_list: []

# LDAPS URIs of backup AE-DIR servers (e.g. in other data center)
aehostd_uri_pool: []

# search base to use
aehostd_searchbase: "ou=ae-dir"

# POSIX-UID number range served by LDAP server
aehostd_min_uid: 30000
aehostd_max_uid: 65000
aehostd_min_gid: 30000
aehostd_max_gid: 65000

# source file containing all trusted CA certs file
# (set to empty string to disable copy task)
aehostd_cacert_filename: "cacert.pem"
# full path name of the trusted CA certs file on the managed node
aehostd_cacert_pathname: "/etc/ssl/{{ aehostd_cacert_filename|basename }}"

# nested dict of OS-specific vars
aehostd_os_vars:
  CentOS:
    sshd_service_name: "sshd"
    ssh_lib_dir: "/usr/libexec/openssh"
    python: "{{ aehostd_venv_path }}/bin/python3"
  Debian:
    sshd_service_name: "ssh"
    ssh_lib_dir: "/usr/lib/openssh"
    python: "{{ aehostd_venv_path }}/bin/python3"
  SUSE:
    sshd_service_name: "sshd"
    ssh_lib_dir: "/usr/lib/ssh"
    python: "/usr/bin/python3"

# which module name to use in /etc/nsswitch.conf
aehostd_nss_module: "aedir"
# which module name to use in /etc/pam.d
aehostd_pam_module: "pam_{{ aehostd_nss_module }}.so"

aehostd_module_packages:
  - "libpam-{{ aehostd_pam_module[4:-3] }}"
  - "libnss-{{ aehostd_nss_module }}"

# process username and group for setuid
aehostd_user: "aehostd"
aehostd_group: "{{ aehostd_user }}"
aehostd_uid: "369"
aehostd_gid: "{{ aehostd_uid }}"

# Python logging level
aehostd_loglevel: "20"

# Python interpreter
aehostd_python: "{{ aehostd_os_vars[aehostd_lsb_id].python }} -ROOBs"

# Pathnames of aehostd's files and directories
aehostd_conf_file: "/etc/aehostd.conf"
aehostd_lib_dir: "/var/lib/{{ aehostd_user }}"
aehostd_sshkeys_dir: "{{ aehostd_lib_dir }}/sshkeys"
aehostd_db_dir: "{{ aehostd_lib_dir }}/db"
aehostd_run_dir: "/run/{{ aehostd_user }}"
aehostd_pw_file: "{{ aehostd_lib_dir }}/aehostd.pw"
aehostd_sudoers_file: "{{ aehostd_lib_dir }}/ae-dir-sudoers-export"
aehostd_pid_file: "{{ aehostd_run_dir }}/aehostd.pid"
# Path name of Unix domain socket for listening
# (must match value of nss-pam-ldapd's build-time config option --with-nslcd-socket)
aehostd_socket: "{{ aehostd_run_dir }}/aehostd.sock"

# sleep time between two passwd/group/sudoers/sshkeys refresh runs
aehostd_refresh_sleep: "90.0"

# Interval (seconds) at which internal monitoring data is written to log.
# Setting this to zero or negative value disables monitor logging completely.
aehostd_monitor: "-1.0"

# Time span (seconds) after which aehostd forcibly reconnects.
aehostd_conn_ttl: "7200"

# template string to use to derive homeDirectory from username
#aehostd_homedir_tmpl: "/home/{user}"
aehostd_homedir_tmpl: ""

# service name of SSH demon
aehostd_sshd_service_name: "{{ aehostd_os_vars[aehostd_lsb_id].sshd_service_name }}"

# which SFTP server to use (disable completely with empty string)
#sshd_sftp_server: "{{ aehostd_os_vars[aehostd_lsb_id].ssh_lib_dir }}/sftp-server"
aehostd_sshd_sftp_server: "internal-sftp"

# Filename of Jinja2 template file used for generating sshd_config
aehostd_sshd_config_template: "sshd_config.j2"
aehostd_sshd_authorized_keys: "/etc/ssh/authorized_keys"

# ListenAddress values
aehostd_sshd_listen_addresses: []

# Log level for sshd
aehostd_sshd_loglevel: "INFO"

# File name of emergency authorized keys for user root
aehostd_sshd_emergency_root_keys: "sshd_emergency_root_keys"

# Path name of public keys trusted for signing user certs
#aehostd_sshd_trusted_userca_keys: "/etc/ssh/trusted_user_ca_keys"
aehostd_sshd_trusted_userca_keys: ""

# where to find the system-specific Jinja2 templates
# for creating PAM config files /etc/pam.d/common-*
aehostd_pam_template_dir: "{{ role_path }}/templates/{{ aehostd_lsb_id }}"

# Arguments used by pam_mkhomedir for automatic creation of user's home directory
# (empty string disables use of pam_mkhomedir)
aehostd_pam_mkhomedir_args: ""

# LDAP search filter for PAM authorization
#-----------------------------------------

# Cache TTL (seconds) of PAM authc results
# Default: -1 (disabled)
aehostd_pam_authc_cache_ttl: -1

# allow only active users with explicit login rights in AE-DIR
# (note: AE-DIR already does this implicit via visibility of aeUser entries)
aehostd_pam_authz_search: "(&(uid={username})(|(pwdChangedTime=*)(userCertificate=*)(sshPublicKey=*)))"

#---------------------------------------------------------------------------
# Python virtual env parameters
#---------------------------------------------------------------------------

# PyPI index to use for PIP installation
aehostd_pip_index_url: 'https://pypi.python.org/simple'

# whether C compiler is needed for PIP installation
aehostd_pip_needs_compiler: "{{ aehostd_pip_index_url == 'https://pypi.python.org/simple' }}"

# directory name for virtual env (used on Debian and CentOS)
aehostd_venv_path: "/opt/aehostd"

# command used to create virtual env
aehostd_venv_command: "/usr/bin/python3 -m venv"

# list of extra arguments for PIP installation
aehostd_pip_args:
  - "--upgrade"
  - "--index-url {{ aehostd_pip_index_url }}"

#---------------------------------------------------------------------------
# AppArmor parameters
#---------------------------------------------------------------------------

# set to True to enable mandatory access control with AppArmor
#aehostd_apparmor_enabled: "{{ ansible_apparmor.status == 'enabled' }}"
aehostd_apparmor_enabled: False

# where custom AppArmor profiles are stored
aehostd_apparmor_profiles_dir: "/etc/apparmor.d"
