---

# SSH authorized keys
#-----------------------------------------------------------------------

- name: "Include OS-specific variables"
  include_vars:
    file: "{{ aehostd_lsb_id }}.yml"
  tags:
    - always

- name: "Create directory for pre-installed SSH authorized keys {{ aehostd_sshd_authorized_keys }}"
  file:
    path: "{{ aehostd_sshd_authorized_keys }}"
    state: directory
    owner: root
    group: root
    mode: 0o0750

- name: "Install SSH emergency root key(s)"
  copy:
    src: "{{ aehostd_sshd_emergency_root_keys }}"
    dest: "/etc/ssh/authorized_keys/root"
    owner: root
    group: root
    mode: 0o0640
  when:
    aehostd_sshd_emergency_root_keys != ""

- name: "Install SSH trusted user CA key(s)"
  copy:
    src: "{{ inventory_dir }}/files/{{ aehostd_sshd_trusted_userca_keys|basename }}"
    dest: "{{ aehostd_sshd_trusted_userca_keys }}"
    owner: root
    group: root
    mode: 0o0640
  when:
    aehostd_sshd_trusted_userca_keys != ""

- name: "Install AE-DIR host demon for module {{ aehostd_nss_module }}"
  include_tasks: "aehostd.yml"

# sshd, NSS and PAM configuration
# these should be the last tasks!
#-----------------------------------------------------------------------

- name: "Install sshd_config based on {{ aehostd_sshd_config_template }}"
  template:
    src: "{{ aehostd_sshd_config_template }}"
    dest: "/etc/ssh/sshd_config"
    owner: root
    group: root
    mode: 0o0640
    validate: "/usr/sbin/sshd -t -f %s"
  notify: restart sshd

- name: "ensure SSH demon is running"
  service:
    name: "{{ aehostd_sshd_service_name }}"
    state: started
    enabled: yes

- name: "Create nsswitch.conf"
  template:
    src: "nsswitch.conf.j2"
    dest: "/etc/nsswitch.conf"
    owner: root
    group: root
    mode: 0o0644

- name: "Install PAM config files from {{ aehostd_pam_template_dir }}/"
  template:
    src: "{{ item }}"
    dest: "/etc/pam.d/{{ (item|basename)[:-3] }}"
    owner: root
    group: root
    mode: 0o0644
  with_fileglob:
    "{{ aehostd_pam_template_dir }}/*.j2"
  tags:
    - pam

- name: "Install sudoers file"
  template:
    src: "sudoers.j2"
    dest: "/etc/sudoers"
    owner: root
    group: root
    mode: 0o0440

- block:

  - name: "Init aeHost entry"
    aehost:
      ldapurl: "{{ aehostd_setup_ldapurl }}"
      cacert: "{{ aehostd_cacert_filename }}"
      clcert: "{{ aehostd_cl_filename|default(omit) }}"
      clkey: "{{ aehostd_cl_filename|default(omit) }}"
      binddn: "uid={{ aehostd_setup_admin|default(ansible_user) }},{{ aehostd_searchbase }}"
      bindpw: "{{ aehostd_setup_adminpw }}"
      name: "{{ inventory_hostname }}"
      state: "{{ aehostd_aehost_state }}"
      srvgroup: "{{ aehostd_srvgroup|default(omit) }}"
      srvgroups: "{{ aehostd_srvgroups|default(omit) }}"
      description: "{{ aehostd_aehost_description|default(omit) }}"
      ticket_id: "{{ aehostd_aehost_ticket_id|default(omit) }}"
      ppolicy: "{{ aehostd_aehost_ppolicy|default(omit) }}"
      askotp: "{{ aehostd_setup_askotp }}"
    delegate_to: "127.0.0.1"
    become: no
    register: aehost_result

  - debug:
      var: aehost_result

  - block:

    - name: "Wait for replication of changes"
      pause:
        seconds: "{{ aehostd_replication_wait }}"
      when: aehost_result.changed

    - name: "Init aehostd with a SSH ping"
      connection: "ssh"
      remote_user: "aehost-init"
      vars:
        ansible_password: "{{ aehost_result.password }}"
        ansible_ssh_args: "-o PasswordAuthentication=yes -o RequestTTY=no -o PreferredAuthentications=password"
      ping:
        data: "pong"
      become: no
      ignore_unreachable: yes

    - name: "Wait aehostd refresh"
      pause:
        seconds: "{{ aehostd_init_wait }}"

    - name: "Normal SSH ping"
      ping:
        data: "pong"
      become: no

    when: aehost_result.changed and aehost_result.password

  when: aehostd_setup_admin is defined

  tags:
    - aedir_init
